{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","stepNumber","xIsNext","step","this","setState","i","renderSquare","React","Component","Game","history","slice","calculateWinner","concat","length","status","current","winner","moves","map","move","desc","key","jumpTo","handleCLick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kMAIA,SAASA,EAAOC,GACd,OACE,4BACEC,UAAU,SACVC,QAAS,WACPF,EAAME,YAGPF,EAAMG,O,IAKPC,E,YACJ,WAAYJ,GAAQ,IAAD,8BACjB,4CAAMA,KAEDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,WAAY,EACZC,SAAS,GANM,E,oEAUZC,GACLC,KAAKC,SAAS,CACZJ,WAAYE,EACZD,QAAUC,EAAO,IAAO,M,mCAIfG,GAAI,IAAD,OACd,OACE,kBAACf,EAAD,CACEI,MAAOS,KAAKZ,MAAMM,QAAQQ,GAC1BZ,QAAS,WACP,EAAKF,MAAME,QAAQY,Q,+BAOzB,OACE,6BACE,yBAAKb,UAAU,aACZW,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAErB,yBAAKd,UAAU,aACZW,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAErB,yBAAKd,UAAU,aACZW,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,S,GA7CTC,IAAMC,WAoDpBC,E,YACJ,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDK,MAAQ,CACXc,QAAS,CACP,CACEb,QAASC,MAAM,GAAGC,KAAK,QAG3BE,SAAS,GATM,E,yEAaPI,GACV,IAAMK,EAAUP,KAAKP,MAAMc,QAAQC,MAAM,EAAGR,KAAKP,MAAMI,WAAa,GAE9DH,EADUa,EAAQP,KAAKP,MAAMI,YACXH,QAAQc,QAC5BC,EAAgBf,IAAYA,EAAQQ,KAIxCR,EAAQQ,GAAKF,KAAKP,MAAMK,QAAU,IAAM,IACxCE,KAAKC,SAAS,CACVM,QAASA,EAAQG,OAAO,CACpBhB,QAASA,IAEfA,QAASA,EACTG,WAAYU,EAAQI,OACpBb,SAAUE,KAAKP,MAAMK,a,+BAGf,IAKJc,EALG,OACDL,EAAUP,KAAKP,MAAMc,QACrBM,EAAUN,EAAQA,EAAQI,OAAS,GACnCG,EAASL,EAAgBI,EAAQnB,SAIrCkB,EADEE,EACO,WAAaA,EAEb,iBAAmBd,KAAKP,MAAMK,QAAU,IAAM,KAGzD,IAAMiB,EAAQR,EAAQS,KAAI,SAACjB,EAAMkB,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,4BACE,4BAAQE,IAAKF,EAAM3B,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,OAK9D,OACE,yBAAK7B,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEE,QAASmB,EAAQnB,QACjBJ,QAAS,SAAAY,GACP,EAAKmB,YAAYnB,OAIvB,yBAAKb,UAAU,aACb,6BAAMuB,GACN,4BAAKG,S,GAnEIX,IAAMC,WA0EzB,SAASI,EAAgBf,GAWvB,IAVA,IAAM4B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEApB,EAAI,EAAGA,EAAIoB,EAAMX,OAAQT,IAAK,CAAC,IAAD,cACnBoB,EAAMpB,GADa,GAC9BqB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GACpE,OAAO/B,EAAQ6B,GAGnB,OAAO,KAKTG,IAASC,OAAO,kBAACrB,EAAD,MAAUsB,SAASC,eAAe,U","file":"static/js/main.d9f8ea86.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={() => {\n        props.onClick();\n      }}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      squares: Array(9).fill(null),\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => {\n          this.props.onClick(i);\n        }}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      xIsNext: true\n    };\n  }\n\n  handleCLick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[this.state.stepNumber];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n        history: history.concat({\n            squares: squares\n        }),\n      squares: squares,\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    const moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move :\n          'Go to game start';\n        return (\n          <li>\n            <button key={move} onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => {\n              this.handleCLick(i);\n            }}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}